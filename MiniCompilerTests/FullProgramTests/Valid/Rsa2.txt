//BBB
program 
{ 
    int k1;
    int k2;

    int p;
    int q;

    int totient;
    int n;
    int e;
    int d;

    read k1;
    read k2;

    if(k1 >= k2 || k1 < 6){
        write "Specify bigger range\n";
        return;
    }

    // Find first prime;
    {
        int i; i = k1;
        // i = 6k
        while(i/6 * 6 != i)
            i = i + 1;

        p = -1;
        while (i < k2 && (p < 0))
        {
            bool isPrime;
            // First probable prime 6k - 1
            i = i - 1;
            // IsPrime function start
            {
                int val; val = 5;
                isPrime = true;
                while(val * val <= i)
                {
                    int val2; val2 = val + 2;
                    if ((i/val)*val == i || (i/val2)*val2 == i)
                    {
                        val = i + 1;
                        isPrime = false;
                    }					
                    else
                    {
                        val = val + 6;
                    }
                }
            }
            // IsPrime function end
        
            if(isPrime) {
                write "Found prime: ";
                write i;
                write "\n";
                p = i;
                i = k2;
            }
            else {
                // Second probable prime 6k +1
                i = i + 2;
                // IsPrime function start
                {
                    int val; val =5;
                    isPrime = true;
                    while(val * val <= i)
                    {
                        int val2; val2 = val + 2;
                        if ((i/val)*val == i || (i/val2)*val2 == i)
                        {
                            val = i + 1;
                            isPrime = false;
                        }					
                        else
                        {
                            val = val + 6;
                        }
                    }
                }
                // IsPrime function end
        
                if(isPrime) {
                    write "Found prime: ";
                    write i;
                    write "\n";
                    p = i;
                    i = k2;
                }
            }

            // i = 6k
            i = i + 5;
        }
    }

    // Find second prime;
    {
        int i; i = k2;
        // i = 6k
        while(i/6 * 6 != i)
            i = i - 1;

        q = -1;
        while (i >= k1 && (q < 0))
        {
            bool isPrime;
            // First probable prime 6k + 1
            i = i + 1;
            // IsPrime function start
            {
                int val; val = 5;
                isPrime = true;
                while(val * val <= i)
                {
                    int val2; val2 = val + 2;
                    if ((i/val)*val == i || (i/val2)*val2 == i)
                    {
                        val = i + 1;
                        isPrime = false;
                    }					
                    else
                    {
                        val = val + 6;
                    }
                }
            }
            // IsPrime function end
            
            if(isPrime) {
                write "Found prime: ";
                write i;
                write "\n";
                q = i;
                i = k1;
            }
            else {
                // Second probable prime 6k - 1
                i = i - 2;
                // IsPrime function start
                {
                    int val; val = 3;
                    isPrime = true;
                    while(val * val <= i)
                    {
                        int val2; val2 = val + 2;
                        if ((i/val)*val == i || (i/val2)*val2 == i)
                        {
                            val = i + 1;
                            isPrime = false;
                        }					
                        else
                        {
                            val = val + 6;
                        }
                    }
                }
                // IsPrime function end
        
                if(isPrime) {
                    write "Found prime: ";
                    write i;
                    write "\n";
                    q = i;
                    i = k1;
                }
            }

            i = i - 5;
        }
    }

    
    if(p < 0 || q < 0) {
        write "Did not find 2 primes in range";
        return;
    }
   
    n = p * q;
    totient = (p - 1) * (q - 1);
    write "Totient: "; write totient; write "\n";

    // Public key calculation;
    {
        
        int gcd;
        e = ~(p | q) / 4;
        if (e < 0) e = -e;

        while(e < totient && gcd != 1)
        {
            int a; int b;
            e = e + 1;
            a = e;  b = totient;

            while (a != b)  
            {  
                if (a > b)      
                    a = a - b;      
                else    
                    b = b - a;      
            }
            gcd = a;
        }

        write "Public key:  (";
        write n;
        write ", ";
        write e;
        write ")\n";
    }

    // Private key calculation
    {
        int x;
        x = 1;
        while(((1 + x*totient)/e)*e != 1 + x*totient)
            x = x + 1;

        d = (1 + x*totient)/e;

        write "Private key: (";
        write n;
        write ", ";
        write d;
        write ")\n";
    }
}
