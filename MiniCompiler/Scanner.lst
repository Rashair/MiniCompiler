
// ==========================================================================
//  GPLEX error listing for lex source file <Scanner.lex>
// ==========================================================================
//  Version:  1.2.2
//  Machine:  GED
//  DateTime: 24/05/2020 12:10:49
//  UserName: przem
// ==========================================================================



%using QUT.Gppg;
%namespace GardensPoint

IntNumber   [0-9]+
RealNumber  [0-9]+\.[0-9]+
Ident       ("@"|"$")[a-z]
PrintErr    "print"("@"|"$"|[a-z0-9])[a-z0-9]*
Endl        (\r\n|\n)

%%

"program"	  { return (int)Tokens.Program; }
"{"           { return (int) Tokens.OpenBrace; }
"}"           { return (int) Tokens.CloseBrace; }
"return"	  { return (int) Tokens.Return; }
";"           { return (int) Tokens.Colon; }
"write"       { return (int)Tokens.Write; }
{IntNumber}   { yylval.val=yytext; return (int)Tokens.IntNumber; }
{RealNumber}  { yylval.val=yytext; return (int)Tokens.RealNumber; }
{Ident}       { yylval.val=yytext; return (int)Tokens.Ident; }
"="           { return (int)Tokens.Assign; }
"+"           { return (int)Tokens.Plus; }
"-"           { return (int)Tokens.Minus; }
"*"           { return (int)Tokens.Multiplies; }
"/"           { return (int)Tokens.Divides; }
"("           { return (int)Tokens.OpenPar; }
")"           { return (int)Tokens.ClosePar; }
{Endl}		  { Console.WriteLine("Found endl"); }
//^^^^
// Warning: This pattern always overrides ""\n"" 
// ----------------------------------------------
"\n"          { Console.WriteLine("Found LF"); }
//^^
// Warning: This pattern always overridden by "{Endl}" 
// ----------------------------------------------------
<<EOF>>       { return (int)Tokens.Eof; }
" "           { }
"\t"          { }
{PrintErr}    { return (int)Tokens.Error; }
.             { Console.WriteLine("Found: " + (int)yytext[0]); return (int)Tokens.Error; }
// ==========================================================================

